name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
# env:
#   IMAGE_NAME: oneslide/k8s.gcr.io
#   ORIGIN_TAG: registry.opensource.zalan.do/acid/postgres-operator-ui:v1.8.1
#   TAG_SUFFIX: postgres-operator-ui-v1.8.1
# jobs:

#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Pull images
#       run: |
#          docker pull ${{ env.ORIGIN_TAG }} 
#          docker tag ${{ env.ORIGIN_TAG }} ${{ env.IMAGE_NAME }}:${{env.TAG_SUFFIX}}

#     - name: Login to Docker Hub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}
        
#     - name: Publish Image to Docker Hub
#       run: |
#         docker push ${{ env.IMAGE_NAME }}:${{env.TAG_SUFFIX}}
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Pull images
      run: |
          docker pull --platform linux/arm64 docker.io/kubesphere/nginx-ingress-controller:v1.4.0
          docker pull --platform linux/arm64 docker.io/kubesphere/gateway-apiserver:v1.0.2
          docker pull --platform linux/arm64 docker.io/kubesphere/gateway-controller-manager:v1.0.2
          docker pull --platform linux/arm64 docker.io/kubesphere/kubectl:v1.27.16

          docker save docker.io/kubesphere/kubectl:v1.27.16 docker.io/kubesphere/gateway-controller-manager:v1.0.2 docker.io/kubesphere/gateway-apiserver:v1.0.2 docker.io/kubesphere/nginx-ingress-controller:v1.4.0 > gateway-v4.1.2.tar
          tar czvf gateway-v4.1.2.tar.gz gateway-v4.1.2.tar
         
    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v3
    
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v3
    # - name: Build and push
    #   uses: docker/build-push-action@v6
    #   with:
    #     # platforms: linux/amd64,linux/arm64
    #     platforms: linux/arm64
    #     tags: mongoclient:latest
    #     load: true
    #     outputs: type=tar,dest=test.tar
    # - name: checkfile 
    #   run: |
    #     docker save mongoclient:latest > mongoclient.tar
    #     # docker load -i nacos-server-v2.4.0.1-arm64.tar
    #     tar czvf mongoclient.tar.gz  mongoclient.tar
    #     echo yes
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: images
        path: |
          gateway-v4.1.2.tar.gz


